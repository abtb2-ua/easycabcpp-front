
#logs {
    scrollbar-width: auto !important;
}

.log-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 90%;
}

.logs-background {
    width: 850px;
    height: 80vh;
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 50px;
    backdrop-filter: blur(10px);
    filter: blur(4px);
    align-content: end;
    padding: 20px;
    position:absolute;
    z-index: -1;
}

.logs {
    width: 830px;
    height: calc(80vh - 40px);
    padding: 10px 20px;
    gap: 20px;
    display: flex;
    flex-direction: column;
    overflow-y: auto;

    /*-webkit-mask-image: linear-gradient(to bottom, transparent, black 10%, black 90%, transparent);*/
    /*mask-image: linear-gradient(to bottom, transparent, black 10%, black 90%, transparent);*/
}

.wrapper {
    width: 90%;
    height: 100%;
    padding: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.container {
    justify-content: center;
    pointer-events: auto;
    display: flex;
    align-items: center;
    z-index: 2;
}

.item {
    width: 100%;
    height: 100%;
    background: gainsboro;
    border-radius: 5px;
    will-change: transform, opacity;
}

.dropdown-content {
    max-height: 250px;
    height: auto;
    max-width: 150px;
    flex-wrap: nowrap !important;
    box-shadow: 0 0 4px gainsboro;
}

.dropdown-content .scroll-section {
    scrollbar-width: auto !important;
    height: auto;
    overflow-y: auto;
}

.dropdown-item {
    display: flex;
    flex-direction: row;
    justify-content: left;
    align-items: center;
    gap: 10px;
    width: 100%;
}



.hamburger {
    cursor: pointer;
    overflow: hidden;
}

.hamburger input {
    display: none;
}

.hamburger svg {
    /* The size of the SVG defines the overall size */
    height: 3em;
    /* Define the transition for transforming the SVG */
    transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
    fill: none;
    stroke: white;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 3;
    /* Define the transition for transforming the Stroke */
    transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
    stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
    transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
}

.disabled {
    filter: grayscale(.5);
    pointer-events: none;
}